<template>
  <scroll-view
    scroll-y="true"
    bindscrolltolower="loadNextPage"
    class="list">
    <view class="operations">
      <view class="operation markAllRead" @tap.stop="markAllRead()">
        <image src="../assets/svgs/markAllRead.svg"></image>
        <text>全部标为已读</text>
      </view>
      <view class="operation refresh" @tap.stop="refresh()">
        <image src="../assets/svgs/refresh.svg"></image>
        <text>刷新</text>
      </view>
    </view>
    <view
      wx:for="{{ list }}"
      wx:for-item="item"
      wx:key="{{ idx }}"
      wx:for-index="idx"
      @tap.stop="jumpTo({{ item.bid }}, {{ item.nid }})"
      class="item {{ item.isUnread ? 'unread' : 'read' }}">
      <view class="avatar">
        <image src="{{ item.user.avatar }}" class="avatar-image"></image>
      </view>
      <view class="content">
        <view class="userinfo">
          <text class="nickname">{{ item.user.nickname }}</text>
          <text class="time"> {{ item.time }}</text>
        </view>
        <text class="message-content">{{ item.content }}</text>
        <text class="xiaoxi-from">在: {{zhuangtaititle}} 中撂下评论</text>
      </view>
    </view>
  </scroll-view>
</template>

<script>
import wepy from 'wepy'
import { api } from '../config'
import http from '../utils/request'
import { dummy } from '../dummyData'

export default class Xiaoxi extends wepy.component {
  data = {
    list: [],
    page: 1,
    zhuangtaititle: '玄武湖我发现了一个秘密山洞'
  }
  async onLoad() {
    this.page = 1
    await this.reloadList()
  }

  async reloadList () {
    this.list = dummy.unreadMessages
    this.$apply()
  }

  methods = {
    /**
     * 跳转到树洞并设置为已读
     * @param {Number} bid blog id
     * @param {Number} nid notification id
     */
    jumpTo (bid, nid) {
      http({
        url: `${api.notifications.read.url}/${nid}`,
        method: api.notifications.read.method
      })

      wepy.navigateTo({
        url: `/pages/detail?id=${bid}`
      })
    },

    /**
     * 全部标记为已读
     */
    async markAllRead () {
      http({
        url: api.notifications.read.url,
        method: api.notifications.read.method
      })

      this.page = 1
      await this.reloadList()
    },

    /**
     * 刷新列表
     */
    async refresh () {
      this.page = 1
      await this.reloadList()
    },

    /**
     * 加载下一页
     */
    async loadNextPage () {
      try {
        const messages = await http({
          url: `${api.notifications.messages.url}?page=${this.page + 1}`,
          method: api.notifications.messages.method
        })

        if (messages.data.data.unreadMessages.length !== 0) {
          this.page++
          this.list.push(...messages.data.data.unreadMessages)
          this.$apply()
        }
      } catch (e) {
        wepy.showModal({
          title: '提示',
          content: `获取消息失败，请截图本提示额。${e.message}`
        })
      }
    }
  }
}
</script>

<style lang="less">
.list {
  position: relative;
  width: 100%;
  top: 40px;
  // height: 100%;
  overflow: hidden;

  .operations {
    float: left;
    width: 100%;
    background: #FFF;
    margin-bottom: 1px;
    overflow: hidden;

    .operation {
      float: left;
      padding: 10px;

      image {
        width: 20px;
        height: 20px;
        margin-right: 5px;
        vertical-align: middle;
      }

      text {
        color: #555;
        font-size: 14px;
        line-height: 20px;
      }
    }

    .markAllRead {
      width: 60%;
    }

    .refresh {
      width: 40%;
      text-align: right;
    }
  }

  .item {
    float: left;
    width: 100%;
    margin-bottom: 1px;
    background: #FFF;
    overflow: hidden;

    .avatar {
      float: left;
      width: 20%;
      padding: 10px;
      text-align: center;

      .avatar-image {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: inline-block;
      }
    }

    .content {
      float: left;
      width: 80%;
      padding: 10px;

      .userinfo {
        float: left;
        width: 100%;

        .nickname {
          color: #333;
          font-weight: bold;
          font-size: 16px;
          line-height: 30px;
        }

        .time {
          margin-left: 10px;
          color: #777;
          font-size: 12px;
        }
      }

      .message-content {
        float: left;
        width: 100%;
        color: #222;
        font-size: 14px;
        line-height: 26px;
      }
    }
  }
  .read {
    opacity: .6;
  }
}
.xiaoxi-from {
  font-size:12px;
  opacity:0.7;
}
</style>
