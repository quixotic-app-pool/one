<template>
  <view class="page">
    <!-- blog content -->
    <view class="blog" wx:if="{{ !loading }}">
      <!-- User Info -->
      <view class="blog-user">
        <view class="blog-user-avatar">
          <image
            class="avatar"
            src="../assets/images/avatar.png">
          </image>
        </view>
        <view class="blog-user-info">
          <view class="blog-user-nickname">
            <text class="nickname">{{ blog.user.nickname }}</text>
            <image
              wx:if="true"
              class="verify"
              src="../assets/icons/female.png">
            </image>
          </view>
          <text class="time-and-from">{{ blog.time }}</text>
        </view>
      </view>
      <!-- Blog Body -->
      <view class="blog-item-body">
        <text class="blog-item-body-content" selectable="true">{{ blog.text }}</text>
        <view class="blog-item-body-images" wx:if="{{ blog.images.length !== 0 }}">
          <image
            wx:for-item="image"
            wx:for="{{ blog.images }}"
            wx:for-index="i"
            wx:key="{{ i }}"
            @tap.stop="viewPic({{ image }}, {{ blog.images }})"
            src="{{ image }}"
            class="blog-item-body-image"
            mode="aspectFill">
          </image>
        </view>
        <view
          class="blog-item-location"
          wx:if="{{ blog.location.locationName }}"
          @tap.stop="showLocation({{ blog.location.latitude }}, {{ blog.location.longitude }})">
          <image class="location-icon" src="../assets/svgs/location.svg"></image>
          <text>{{ blog.location.locationName }}</text>
        </view>
      </view>
    </view>
    <comment/>
  </view>
</template>

<script>
import wepy from 'wepy'
import { api } from '../config'
import http from '../utils/request'
import sensitiveWordChecker from '../utils/sensitiveWordChecker'
import { dummy } from '../dummyData'
import comment from '../components/comments'

export default class Detail extends wepy.page {
  config = {
    navigationBarTitleText: '内容'
  }

  data = {
    blog: {},
    loading: true,
    placeholder: '写点评论...',
    focusComment: false,
    disable: true,
    comment: '',
    isAnonymous: false,
    replyTo: '',
    inputContent: '',
    isTest: false
  }
  components= {
    comment: comment
  }

  methods = {
    /**
     * 查看大图
     * @param {String} cur 当前展示图片
     * @param {Array}  imageList 展示的图片列表
     */
    viewPic (cur, imageList) {
      wepy.previewImage({
        current: cur,
        urls: imageList
      })
    },

    /**
     * 点赞
     * @param {Number} idx 点赞树洞的索引
     * @param {Number} id  点赞树洞的 id
     */
    async like () {
      this.blog.like = !this.blog.like

      if (this.blog.like) {
        this.blog.likeNum++
      } else {
        this.blog.likeNum--
      }

      // apply change
      this.$apply()

      // commit request
      try {
        const res = await http({
          url: api.blog.like.url,
          method: api.blog.like.method,
          data: {
            bid: this.blog.id
          }
        })

        if (res.statusCode === 400) {
          this.blog.like = !this.blog.like

          if (this.blog.like) {
            this.blog.likeNum++
          } else {
            this.blog.likeNum--
          }

          this.$apply()
        }
      } catch (e) {
        // roll back when request failed
        console.log(e)

        this.blog.like = !this.blog.like

        if (this.blog.like) {
          this.blog.likeNum++
        } else {
          this.blog.likeNum--
        }

        this.$apply()
      }
    },

    /**
     * 显示更多操作
     * @param {Number} idx 点赞树洞的索引
     * @param {Number} id  点赞树洞的 id
    */
    async showMore () {
      try {
        const { tapIndex } = await wepy.showActionSheet({
          itemList: [
            '删除'
          ]
        })

        if (tapIndex === 0) {
          await http({
            url: api.blog.delete.url,
            method: api.blog.delete.method,
            data: {
              bid: this.blog.id
            }
          })

          await wepy.navigateBack({
            delta: 1
          })
        }
      } catch (e) {}
    },

    /**
     * 显示地图
     * @param {Float} latitude  纬度
     * @param {Float} longitude 经度
     */
    showLocation (latitude, longitude) {
      wepy.openLocation({
        latitude,
        longitude,
        scale: 28
      })
    },

    /**
     * 显示操作列表
     * @param {String}  nickname 操作对象的昵称
     * @param {String}  openid   操作对象的 openid
     * @param {Boolean} isAdmin  是否具有高级权限
     * @param {Number}  id       操作对象的评论的 id
     * @param {Number}  idx      操作对象的索引
     */
    async showAction (nickname, openid, isAdmin, isAuthor, id, idx) {
      console.log(arguments)
      const itemList = [`回复 ${nickname}:`]

      if (isAdmin || isAuthor) {
        itemList.push('删除评论')
      }

      try {
        const { tapIndex } = await wepy.showActionSheet({
          itemList
        })

        if (tapIndex === 0) {
          this.methods.reply.call(this, nickname, openid)
        } else if (tapIndex === 1) {
          await this.methods.deleteComment.call(this, id, idx)
        }
      } catch (e) {}
    },

    /**
     * 回复指定人
     * @param {String} nickname 回复对象的昵称
     * @param {String} openid   回复对象的 openid
     */
    reply (nickname, openid) {
      this.inputContent = '回复 ' + nickname + '：'
      this.focusComment = true
      this.replyTo = openid
      this.$apply()
    },

    /**
     * 删除评论
     * @param {Number} id  要删除对象的评论的 id
     * @param {Number} idx 要删除对象的索引
     */
    async deleteComment (id, idx) {
      const status = await wepy.showModal({
        title: '删除',
        content: '确定要删除这条评论？',
        cancelText: '不删了',
        cancelColor: '#666666',
        confirmText: '删除吧',
        confirmColor: '#3CC51F'
      })

      if (status.confirm) {
        try {
          await http({
            url: `${api.blog.deleteComment.url}/${id}`,
            method: api.blog.deleteComment.method
          })

          await this.fetchDetail(this.blog.id)
        } catch (e) {
          wepy.showModal({
            title: '提示',
            content: '删除评论失败。请重试或截图本提示，联系深大汪峰。' + e.message
          })
        }
      }
    },

    /**
     * 直接回复评论
     */
    comment () {
      this.inputContent = ''
      this.placeholder = '写点评论...'
      this.focusComment = true
      this.$apply()
    },

    /**
     * 输入监听器
     * 自动映射到 content
     * @param {Event} e 输入事件
     */
    inputChange (e) {
      this.comment = e.detail.value
      this.disable = e.detail.value === ''
    },

    /**
     * 输入框聚焦
     */
    inputFocus () {
      this.focusComment = true
      this.$apply()
    },

    /**
     * 输入框失去焦点
     */
    inputBlur () {
      this.focusComment = false
      this.$apply()
    },

    async inputConfirm () {
      await this.methods.send.call(this)
    },

    /**
     * 切换实名、匿名
     */
    anonymousChange () {
      this.isAnonymous = !this.isAnonymous
      this.$apply()
    },

    /**
     * 发送评论
     */
    async send () {
      wepy.showToast({
        title: '发送中...',
        icon: 'loading',
        duration: 10000,
        mask: true
      })

      if (sensitiveWordChecker(this.comment)) {
        wepy.hideToast()
        wepy.showModal({
          title: '提示',
          content: '包含敏感词汇，发送失败：）'
        })
        return
      }

      const pack = {
        bid: this.blog.id,
        content: this.comment,
        replyTo: this.replyTo,
        isAnonymous: this.isAnonymous
      }

      try {
        await http({
          url: api.blog.comment.url,
          method: api.blog.comment.method,
          data: pack
        })

        // init input
        this.inputContent = this.comment
        this.$apply()
        this.comment = ''
        this.replyTo = ''
        this.inputContent = ''
        this.disable = true
        this.focusComment = false
        this.isAnonymous = false

        // refetch data
        await this.fetchDetail(this.blog.id)
        this.$apply()

        wepy.hideToast()
      } catch (e) {
        wepy.hideToast()
        wepy.showModal({
          title: '提示',
          content: '发送评论失败。请重试或截图本提示，联系深大汪峰。' + e.message
        })
      }
    }
  }

  async onLoad (options) {
    this.loading = true
    this.$apply()
    await this.fetchDetail(options.id)
    this.focusComment = !!options.focusComment
    // this.isTest = !Boolean(wepy.getStorageSync(`isInTest-${version}`))
    this.$apply()
  }

  async onPullDownRefresh () {
    await this.fetchDetail(this.blog.id)
    wepy.stopPullDownRefresh()
    this.$apply()
  }

  async fetchDetail (id) {
    this.blog = dummy.blogDetail
    this.loading = false
    this.$apply()

    // const raw = await http({
    //   url: `${api.blog.detail.url}/${id}`,
    //   method: api.blog.detail.method
    // })
    //
    // if (raw.statusCode === 404) {
    //   await wepy.showToast({
    //     title: '树洞不存在',
    //     icon: 'loading',
    //     image: '../assets/svgs/warn.svg',
    //     duration: 1500,
    //     mask: true
    //   })
    //
    //   setTimeout(async () => {
    //     await wepy.navigateBack({
    //       delta: 1
    //     })
    //   }, 1500)
    // } else {
    //   this.loading = false
    //   this.blog = raw.data.data
    //   this.$apply()
    // }
  }
}
</script>

<style lang="less">
.page {
  width: 100%;
  padding-bottom: 60px;

  .blog {
    width: 100%;
    padding: 15px;
    padding-bottom: 5px;
    margin-bottom: 10px;
    background: #FFF;
    overflow: hidden;

    .blog-user {
      width: 100%;
      overflow: hidden;

      .blog-user-avatar {
        float: left;

        .avatar {
          width: 45px;
          height: 45px;
          border-radius: 3px;
        }
      }

      .blog-user-info {
        float: left;
        padding-left: 10px;

        .blog-user-nickname {
          overflow: hidden;

          .nickname {
            float: left;
            margin-top: 5px;
            margin-right: 5px;
            font-size: 16px;
            font-weight: bold;
            line-height: 20px;
            color: #333;
          }

          .verify {
            float: left;
            width: 15px;
            height: 15px;
            margin-top: 6px;
          }
        }

        .time-and-from {
          width: 100%;
          margin-top: 2px;
          font-size: 12px;
          color: #777;
          display: block;
        }
      }
    }

    /* body */
    .blog-item-body {
      width: 100%;
      box-sizing: border-box;
      overflow: hidden;

      .blog-item-body-content {
        float: left;
        width: 100%;
        font-size: 16px;
        line-height: 28px;
        color: #333;
        text-align: justify;
      }

      .blog-item-body-images {
        width: 100%;

        .blog-item-body-image {
          width: 100%;
          margin-right: 5px;
          margin-top: 5px;
          border-radius: 10px;
        }
      }

      .blog-item-location {
        float: left;
        width: 250px;
        height: 24px;

        .location-icon {
          width: 24px;
          height: 24px;
          vertical-align: middle;
        }

        text {
          font-size: 10px;
          line-height: 24px;
          font-weight: bold;
          color: grey;
          opacity: 0.5;
        }
      }
    }
  }
}

@keyframes clickAnimation {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.5);
  }
  100% {
    transform: scale(1);
  }
}
</style>
